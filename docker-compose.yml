version: '3.4'

services:
  gateway:
    image: paulrozhkin/sport-tracker:latest
    environment:
      - "TRACKER_SERVER_HOST=0.0.0.0"
      - "TRACKER_SERVER_PORT=80"
      - "TRACKER_SERVER_DISABLE_CORS=true"
      - "TRACKER_DATABASE_NAME=sport_tracker"
      - "TRACKER_DATABASE_USER=postgres"
      - "TRACKER_DATABASE_PASSWORD=sql"
      - "TRACKER_DATABASE_CONNECTION=postgres:5433"
      - "TRACKER_DATABASE_SSL=disable"
      - "TRACKER_DATABASE_SEEDING=true"
      - "TRACKER_jwtSigningKey=<pass jwt signing key>"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:80"

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sql
      - POSTGRES_DB=sport_tracker
      - PGPORT=5433
    ports:
      - "5433:5433"
    volumes:
      - postgres:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 5s
      retries: 5

volumes:
  postgres: